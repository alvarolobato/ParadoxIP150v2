String alarm_state "Alarm Zone State [%s]" (g_alarm) {mqtt="<[openhab:Paradox/State:state:default]"}
Switch alarm_state_arm_disarm "Alarm Arm State [%s]" <shield> (g_alarm) {mqtt="<[openhab:Paradox/Partition:state:default]"}
//Any contact items need a transform as the scroipyt outputs ON or OFF, need to translate to OPEN CLOSED
Contact alarm_connection_online "Monitor State [%s]" <shield> (g_alarm) {mqtt="<[openhab:ParadoxMonitor/$online:state:MAP(onoff.map)]"}
Contact alarm_connection_heartbeat "Alarm Connection [%s]" <shield> (g_alarm) {mqtt="<[openhab:Paradox/Heartbeat:state:MAP(onoff.map)]"}

//Zone Definitions, these labels are posted on each live event
Contact alarm_zone_familyrm "Family Room State [%s]" <motion> (g_alarm,g_motion_detection) {mqtt="<[openhab:Paradox/Zone/<zone name>:state:MAP(onoff.map)]"}
//Example zone definition
Contact alarm_zone_maindoor "Main Door State [%s]" <motion> (g_alarm,g_motion_detection) {mqtt="<[openhab:Paradox/Zone/Main door PIR:state:MAP(onoff.map)]"}

//I'm using this state fro driving Homebridge https://github.com/mnrgreg/homebridge-paradox-security-system
String alarm_hb_state "Alarm Homebridge state [%s]" (g_alarm) {mqtt="<[openhab:Paradox/Partition/Status:state:default]"}

//Battery status and voltages, happens ever 6 status cycles.  more for interests sake
//Paradox/Status/1 {"battery": 13.4, "vdc": 16.9, "dc": 13.7, "paneldate": "2018-6-4 12:0"}
Number alarm_battery "Battery Voltage [%.1fv]" <battery> (g_alarm) {mqtt="<[openhab:Paradox/Status/1:state:JSONPATH($.battery)]"}
Number alarm_vdc "VDC [%.1fv]" <battery> (g_alarm) {mqtt="<[openhab:Paradox/Status/1:state:JSONPATH($.vdc)]"}
Number alarm_dc "DC [%.1fv]" <battery> (g_alarm) {mqtt="<[openhab:Paradox/Status/1:state:JSONPATH($.dc)]"}


//Disarm Command on partition 1
Switch alarm_command_arm_disarm "Alarm Arm Command" <shield> (g_alarm_control) { mqtt=">[openhab:Paradox/C/P1:command:ON:arm],>[openhab:Paradox/C/P1:command:OFF:disarm]"}

